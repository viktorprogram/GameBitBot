import os
from GamebitBot.loader import bot
from telebot.types import Message, InputMediaPhoto, CallbackQuery
from keyboards.inline_button import menu_button, button_location, visit_time_button, \
    request_contact_button, choosing_place_button
from state.state_user import UserStateInfo


@bot.message_handler(commands=['start'])
def command_start(message: Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã —Å—Ç–∞—Ä—Ç —Å –≤—ã–≤–æ–¥–æ–º –±–ª–æ–∫–∞ –∫–Ω–æ–ø–æ–∫ —Å –æ–±—â–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π"""
    bot.send_message(chat_id=message.chat.id,
                     text=f"<b>{message.from_user.full_name}</b> –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ <b>GameBitBot</b>",
                     parse_mode='html',
                     reply_markup=menu_button())

specifications_text = ('üñ• 32" –ú–æ–Ω–∏—Ç–æ—Ä Samsung Odyssey G5 165–ì—Ü, –∏–∑–æ–≥–Ω—É—Ç—ã–π \n'
          '‚å®Ô∏è –ú–µ—Ö–∞–Ω–∏—á–µ—Å–∫–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ Defender Black Raven GK-417, 3 —Ü–≤–µ—Ç–∞, —Ä–∞–¥—É–∂–Ω–∞—è –ø–æ–¥—Å–≤–µ—Ç–∫–∞, 63 –∫–Ω–æ–ø–∫–∏ \n'
          'üñ± –ò–≥—Ä–æ–≤–∞—è –º—ã—à—å –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω–∞—è Redragon Griffin 7 –∫–Ω–æ–ø–æ–∫ 7200 DPI \n'
          'üÄÜ Intel –ü—Ä–æ—Ü–µ—Å—Å–æ—Ä Core i5-10600KF \n'
          'üïπ –û–ø–µ—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–º—è—Ç—å HyperX FURY 16 –ì–ë \n'
          'üíæ Kingston –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π SSD-–¥–∏—Å–∫ KC3000 M.2 PCI-E 4.0 \n'
          'üì∏ ZOTAC –í–∏–¥–µ–æ–∫–∞—Ä—Ç–∞ GeForce RTX 4060 8 –ì–ë')


def open_photo_to_message(name: str):
    """–§—É–Ω–∫—Ü–∏—è —á—Ç–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏"""
    open_photo = [open((f'{os.getcwd()}\\photo\\{name}\\{path}'), 'rb') for path in
                          os.listdir(f'{os.getcwd()}\\photo\\{name}')]
    media_photo = [InputMediaPhoto(i) for i in open_photo]
    return open_photo, media_photo

def close_photo(list_open_photo: list):
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π"""
    for interior in list_open_photo: interior.close()
    return

@bot.message_handler(func=lambda message:True)
def info_gamebit(message: Message):
    """–í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–ª—É–±–µ"""
    text = message.text
    if text == '‚å®Ô∏èüñ•–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏':
        bot.send_message(chat_id=message.chat.id, text=specifications_text)

    elif text == 'üåá–ò–Ω—Ç–µ—Ä—å–µ—Ä':
        open_photo_path, photo = open_photo_to_message(name='interior')
        bot.send_media_group(chat_id=message.chat.id, media=photo)
        close_photo(open_photo_path)

    elif text == 'üì´–õ–æ–∫–∞—Ü–∏—è':
        photo_location = open((f'{os.getcwd()}\\photo\\location\\location.jpg'), 'rb')
        bot.send_photo(chat_id=message.chat.id,
                       reply_markup=button_location(),
                       photo=photo_location,
                       caption='–ú—ã –Ω–∞—Ö–æ–¥–∏–º—Å—è –ø–æ –∞–¥—Ä–µ—Å—É <b>C–µ–ª–æ –í–∏–Ω—Å–∞–¥—ã, –ü–æ–¥–≥–æ—Ä–Ω–∞—è —É–ª–∏—Ü–∞, 156–ì 2 —ç—Ç–∞–∂</b> ',
                       parse_mode='html')
        photo_location.close()

    elif text == 'üí∞–ü—Ä–∞–π—Å':
        open_photo_path, photo = open_photo_to_message(name='price')
        bot.send_media_group(chat_id=message.chat.id, media=photo)
        close_photo(open_photo_path)

    elif text == 'üö®–ü—Ä–∞–≤–∏–ª–∞ –∫–ª—É–±–∞':
        open_photo_path, photo = open_photo_to_message(name='rule')
        bot.send_media_group(chat_id=message.chat.id, media=photo)
        close_photo(open_photo_path)
    elif text == '–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å':
          bot.send_message(chat_id=message.chat.id, reply_markup=visit_time_button(name_time='visit_time'), text='–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è –ø–æ—Å–µ—â–µ–Ω–∏—è –∫–ª—É–±–∞')


@bot.callback_query_handler(func=lambda call: call.data.endswith('visit_time'))
def visit_time_user(call: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ –æ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å–µ—â–µ–Ω–∏—è, –∏ –∑–∞–Ω–æ—Å—è –µ–µ –≤ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    bot.set_state(user_id=call.from_user.id, chat_id=call.message.chat.id, state=UserStateInfo.visit_time)
    with bot.retrieve_data(user_id=call.from_user.id, chat_id=call.message.chat.id) as data:
        data['visit_time'] = call.data[:5]
        print(data, call.from_user.id, call.message.chat.id)
    bot.edit_message_text(text=f'–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤—Ä–µ–º—è –ø–æ—Å–µ—â–µ–Ω–∏—è {call.data[:5]} –≤—ã–±–µ—Ä–∏—Ç–µ –¥–æ –∫–∞–∫–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ ',
                          chat_id=call.message.chat.id,
                          message_id=call.message.message_id, reply_markup=visit_time_button(name_time='end_time')
                          )

@bot.callback_query_handler(func=lambda call: call.data.endswith('end_time'))
def end_time_user(call: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ –æ –≤—Ä–µ–º–µ–Ω–∏ –ø—Ä–µ–∫—Ä–∞—â–µ–Ω–∏—è –ø–æ—Å–µ—â–µ–Ω–∏—è, –∏ –∑–∞–Ω–æ—Å—è –µ–µ –≤ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    with bot.retrieve_data(call.from_user.id, call.message.chat.id) as data:
        data['end_time'] = call.data[:5]
        visit_data = data.get('visit_time')
        print(data, call.from_user.id, call.message.chat.id)
    bot.edit_message_text(text=f'–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤—Ä–µ–º—è –ø–æ—Å–µ—â–µ–Ω–∏—è {visit_data} \n '
                               f'–≤—Ä–µ–º—è —É–±—ã—Ç–∏—è {call.data[:5]}',
                          chat_id=call.message.chat.id,
                          message_id=call.message.message_id)
    bot.send_message(chat_id=call.message.chat.id,
                     text='–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä',
                     reply_markup=choosing_place_button())

@bot.callback_query_handler(func=lambda call: call.data.startswith('pk'))
def choosing_place_user(call: CallbackQuery):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –≤—ã–±—Ä–æ–Ω–Ω–∞–≥–æ –º–µ—Å—Ç–∞ –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"""
    bot.set_state(user_id=call.from_user.id, chat_id=call.message.chat.id, state=UserStateInfo.name_state)
    with bot.retrieve_data(call.from_user.id, call.message.chat.id) as data:
        data['choosing_place'] = call.data[2:]
    bot.edit_message_text(text='–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–µ –∏–º—è', chat_id=call.message.chat.id, message_id=call.message.message_id)



@bot.message_handler(content_types=["text"])
def user(message: Message):
    print(message.text)

@bot.message_handler(state=UserStateInfo.start)
def name_user(message: Message):

    print(message.text)
    with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
        data['name_user'] = message.text
    bot.send_message(chat_id=message.chat.id,
                    text='–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–º –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –¥–ª—è —Å–≤—è–∑–∏ —Å –≤–∞–º–∏, –¥–ª—è —ç—Ç–æ–≥–æ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É —Å–Ω–∏–∑—É üëá',
                    reply_markup=request_contact_button())

# @bot.message_handler(content_types=['contact'])
# def phone(message: Message):
#     """–ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É"""
#     with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
#         visit_time = data.get('visit_time')
#         end_time = data.get('end_time')
#     bot.send_message(chat_id='259061505', text=f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.full_name} \n '
#                                                f'–∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–ª –Ω–∞ –≤—Ä–µ–º—è {visit_time} - {end_time} \n'
#                                                f'–Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ - {message.contact.phone_number}')
